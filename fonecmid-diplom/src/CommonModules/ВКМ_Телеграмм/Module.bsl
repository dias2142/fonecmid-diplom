
#Область ПрограммныйИнтерфейс

// Отправка уведомления в телеграмм.
// 
// Параметры:
//  Уведомление - структура - структура для пердачи уведомления:
//  	* Токен - строка - токен бота в телеграмме
//  	* ИдентификаторГруппы - число - идентификатор группы для оповещения
//  	* Уведомление - СправочникСсылка - ссылка на элемент справочника Уведомлений
Процедура ОтправкаУведомленияВТелеграмм(Уведомление) Экспорт
	Если НЕ ЗначениеЗаполнено(Уведомление) Тогда
		Возврат;
	КонецЕсли;
		
	//Созаем соединение
	ДанныеСеанса = ПолучитьДанныеСеанса(Уведомление.Токен);
	//Устанавливаем Http соединение 
	Соединение = СоздатьHTTPСоединение(ДанныеСеанса); 
	
	//Формируем запрос
	ЗапросБоту = СоздатьHTTPЗапрос(ДанныеСеанса.АдресРесурса);
	ЗапросБоту.Заголовки.Вставить("Content-Type", "application/json");
	Тело = Новый Структура ("chat_id, text");
	Тело.chat_id = Уведомление.ИдентификаторГруппы;
	//@skip-check bsl-legacy-check-string-literal
	Тело.text = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Уведомление.Уведомление,"Текст");
	ЗапросБоту.УстановитьТелоИзСтроки(ЗаписатьЗначениеJSON(Тело));
	
	//Получаем ответ
	Ответ =  Соединение.Получить(ЗапросБоту);
	
	//действия с полученным ответом
	Если Ответ.КодСостояния = 200 Тогда 
		//Уведомление передано
		ЭлементСпр = Уведомление.Уведомление.ПолучитьОбъект();
		ЭлементСпр.Удалить();
		Возврат;
	КонецЕсли;
	
	// произошла ошибка пишем в журнал
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	ЗаписатьОтветВЖурналРегистрации(ТелоОтвета);
КонецПроцедуры

// Регламентный обмен с телеграммом.
Процедура РегламентныйОбменСТелеграммом() Экспорт
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВКМ_Уведомления.Ссылка
	|ИЗ
	|	Справочник.ВКМ_Уведомления КАК ВКМ_Уведомления");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		//ОбщегоНазначения.СообщитьПользователю("Нет уведомлений для отправки");
		Возврат;
	КонецЕсли;
	Токен = Константы.ВКМ_ТокенТелеграммБота.Получить();
	ИдентификаторГруппы = Константы.ВКМ_ИдентификаторГруппыТелеграмм.Получить();
	
	Пока Выборка.Следующий() Цикл
		Уведомление = Новый Структура();
		Уведомление.Вставить("Токен", Токен);
		Уведомление.Вставить("ИдентификаторГруппы", ИдентификаторГруппы);
		Уведомление.Вставить("Уведомление", Выборка.Ссылка );
		ОтправкаУведомленияВТелеграмм(Уведомление);
		
	КонецЦикла;

КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункци

Функция ПолучитьДанныеСеанса(ТокенБота)
	//https://api.telegram.org , ресурс - /bot[ВашТокен]/sendMessage
	Результат = Новый Структура; 
	Результат.Вставить("АдресСервера","api.telegram.org");
	Результат.Вставить("АдресРесурса", СтрШаблон("/bot%1/sendMessage", ТокенБота));
	Результат.Вставить("ЗащищенноеСоединение",Истина);  
	
	Возврат Результат;
КонецФункции

Функция СоздатьHTTPСоединение(ДанныеСеанса)
	
	ЗащищенноеСоединение = Неопределено;
	Если ДанныеСеанса.ЗащищенноеСоединение Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;  
	КонецЕсли;
	
	Результат = Новый HTTPСоединение(ДанныеСеанса.АдресСервера,,,
			,,,ЗащищенноеСоединение);
	
	Возврат Результат;
КонецФункции

Функция СоздатьHTTPЗапрос(АдресРесурса)
	
	Результат = Новый HTTPЗапрос(АдресРесурса);
	
	Возврат Результат;
КонецФункции


Процедура ЗаписатьОтветВЖурналРегистрации(Комментарий)

	СтруктураСобытий = Новый Структура("ИмяСобытия, ПредставлениеУровня, Комментарий");

	СтруктураСобытий.ИмяСобытия 		 = "Ошибка отправки уведомления в телеграмм-бот";

	СтруктураСобытий.ПредставлениеУровня = "Предупреждение";	
	СтруктураСобытий.Комментарий 		 = Комментарий;
	СтруктураСобытий.Вставить("ДатаСобытия", ТекущаяДатаСеанса());

	СобытияДляЖурналаРегистрации = Новый СписокЗначений;
	СобытияДляЖурналаРегистрации.Добавить(СтруктураСобытий);

	ЖурналРегистрации.ЗаписатьСобытияВЖурналРегистрации(СобытияДляЖурналаРегистрации);

КонецПроцедуры


#КонецОбласти
