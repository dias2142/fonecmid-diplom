
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//ВКМ_Начало ***************************
	ВКМ_ДобавитьКнопкуЗаполнитьВУслуги();
	//ВКМ_Конец ********************************
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры


&НаСервере 
Процедура ВКМ_ДобавитьКнопкуЗаполнитьВУслуги()
//ВКМ_Наачало: Задача 1.3 - Добавление кнопки заполнить табличную часть Услуги **************************

КомандаЗаполнить = Команды.Добавить("ВКМ_Заполнить");
КомандаЗаполнить.Действие = "ВКМ_ДействиеКомандыЗаполнить";
КомандаЗаполнить.Заголовок = "Заполнить";

ЭлементКнопкаЗаполнить = Элементы.Добавить("ВКМ_КнопкаЗаполнить",Тип("КнопкаФормы") ,Элементы.Услуги.КоманднаяПанель );
ЭлементКнопкаЗаполнить.ИмяКоманды = "ВКМ_Заполнить";

//ВКМ_Окончание ***************************************************************************************
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура ВКМ_ДействиеКомандыЗаполнить()
	//ВКМ_Начало **********************************
	
	ВКМ_ДействиеКомандыЗаполнитьСервер();
	РассчитатьСуммуДокумента();
	
	//ВКМ_Окончание **********************************************
КонецПроцедуры

&НаСервере
Процедура ВКМ_ДействиеКомандыЗаполнитьСервер()
	//ВКМ_Начало: Задача 1.3 ************************************
	
	
	Если Не ЗначениеЗаполнено(Объект.Договор) Тогда
		Возврат;
	Иначе
		ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор,
			" ВидДоговора, ВКМ_ДатаНачала, ВКМ_ДатаОкончания");
		Если ДанныеДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
			Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДанныеДоговора.ВКМ_ДатаОкончания) Тогда
			ДанныеДоговора.ВКМ_ДатаОкончания = Дата(2999, 12, 31);
		КонецЕсли;
		Если Не (Объект.Дата >= ДанныеДоговора.ВКМ_ДатаНачала И Объект.Дата <= ДанныеДоговора.ВКМ_ДатаОкончания) Тогда
			ОбщегоНазначения.СообщитьПользователю("Указанный договор не действует в месяце даты документа!");
			Возврат;
		КонецЕсли;

	КонецЕсли;
	
    ДокументОбъект = РеквизитФормыВЗначение("Объект");
    Отказ = Ложь;
    ДокументОбъект.ВыполнитьАвтозаполнение(Отказ);
    ЗначениеВРеквизитФормы(ДокументОбъект,"Объект" );
		
	//ВКМ_Конец ****************************************************
КонецПроцедуры
	


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
