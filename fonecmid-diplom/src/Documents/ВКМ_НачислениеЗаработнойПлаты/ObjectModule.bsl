
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда



#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Проверяем указанны ли сотрудник для проведения начислений
	Если ЗаработнаяПлата.Количество() = 0 И Отпуск.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Отмена проведения! Не указанны сотрудники для начислений.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//Получаем ставку НДФЛ для удержания
	СтавкаНДФЛ = Константы.ВКМ_СтавкаНДФЛ.Получить();
	
	//Формируем записи для расчета ЗП
	ФормируемЗаписиРасчетаЗП(Отказ, СтавкаНДФЛ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	//Формируем записи для расчета отпуска
	ФормируемЗаписиРасчетаОтпуска(Отказ,СтавкаНДФЛ);
	
	//Записываем записи в регистр
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
	//начисления
	НачислениеЗП();	
	НачислениеОтпуск();
	НачислениеУдержаний();
	 
	 //Делаем движения по РН ВзаиморасчетыССотрудниками
	 ФормируемВзаиморасчетыССотрудниками();
	 
	 //Формируем записи движения по РН Отпуска
	 ФормируемЗаписиОтпускаСотрудников();
	
КонецПроцедуры




#КонецОбласти



#Область СлужебныеПроцедурыИФункции

// Код процедур и функций
Процедура ФормируемЗаписиРасчетаЗП(Отказ, СтавкаНДФЛ)
	
	Если ЗаработнаяПлата.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.Сотрудник.КатегорияСотрудника КАК КатегорияСотрудника,
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.ДатаОкончания
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.ЗаработнаяПлата КАК ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сотрудники.Сотрудник,
	|	ВТ_Сотрудники.КатегорияСотрудника,
	|	ВТ_Сотрудники.ДатаНачала,
	|	ВТ_Сотрудники.ДатаОкончания,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад
	|ПОМЕСТИТЬ ВТ_Оклад
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&ДатаРасчета, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Сотрудники.Сотрудник
	|			ИЗ
	|				ВТ_Сотрудники)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВТ_Сотрудники.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Оклад.Сотрудник КАК Сотрудник,
	|	ВТ_Оклад.КатегорияСотрудника,
	|	ВТ_Оклад.ДатаНачала,
	|	ВТ_Оклад.ДатаОкончания,
	|	ВТ_Оклад.Оклад,
	|	ЕСТЬNULL(ВКМ_ВыполненыеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот
	|ИЗ
	|	ВТ_Оклад КАК ВТ_Оклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненыеСотрудникомРаботы.Обороты(&ДатаН, &ДатаК,, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Сотрудники.Сотрудник
	|			ИЗ
	|				ВТ_Сотрудники)) КАК ВКМ_ВыполненыеСотрудникомРаботыОбороты
	|		ПО ВТ_Оклад.Сотрудник = ВКМ_ВыполненыеСотрудникомРаботыОбороты.Сотрудник	
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаРасчета", Дата);
	Запрос.УстановитьПараметр("ДатаН", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаК", КонецМесяца(Дата));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
		Движение.ПериодРегистрации = НачалоМесяца(Дата);
		Движение.ПериодДействияНачало = НачалоДня(Выборка.ДатаНачала);
		Движение.ПериодДействияКонец = КонецДня(Выборка.ДатаОкончания);
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ГрафикРаботы = ГрафикРаботы;
		Если НЕ Выборка.Оклад = NULL Тогда
			Движение.Оклад = Выборка.Оклад;
		Иначе
			Шаблон = СтрШаблон("Отмена расчета! На дату проведения начисления не задан оклад по %1!", Выборка.Сотрудник);
			ОбщегоНазначения.СообщитьПользователю(Шаблон);
			Отказ = Истина;
			Продолжить;
		КонецЕсли;		
		Движение.ОплатаПоПроценту = Выборка.СуммаКОплатеОборот;
		
		//Формируем запись регистра удержания НДФЛ
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ_Оклад;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.СтавкаНДФЛ = СтавкаНДФЛ;	
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ФормируемЗаписиРасчетаОтпуска(Отказ, СтавкаНДФЛ)
	
	Если Отпуск.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.Сотрудник.КатегорияСотрудника КАК КатегорияСотрудника,
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.ДатаОкончания	
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.Отпуск КАК ВКМ_НачислениеЗаработнойПлатыОтпуск
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	//Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записывать = Истина;
	//Движения.ВКМ_Удержания.Записать();
	Сотрудники = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		//анализируем месяц начала и месяц окончания (переход отпуска из одного месяца в другой)
		ИнтервалыОтпуска = Новый Массив;
		ДатаН = Выборка.ДатаНачала;
		МесяцН = Месяц(ДатаН);
		ГодН = Год(ДатаН);
		МесяцК = Месяц(Выборка.ДатаОкончания);
		ГодК = Год(Выборка.ДатаОкончания);
		Пока (МесяцН <> МесяцК) ИЛИ (ГодН <> ГодК) Цикл
			Интервал = Новый Структура ("ДатаНачала, ДатаОкончания");
			Интервал.ДатаНачала = НачалоДня(ДатаН);
			Интервал.ДатаОкончания = КонецМесяца(ДатаН);
			ДатаН = Интервал.ДатаОкончания + 1;
			МесяцН = Месяц(ДатаН);
			ГодН = Год(ДатаН);
			ИнтервалыОтпуска.Добавить(Интервал);
		КонецЦикла;
		ИнтервалыОтпуска.Добавить(Новый Структура("ДатаНачала, ДатаОкончания",
			               ДатаН, КонецДня(Выборка.ДатаОкончания)));
		
		Для Каждого Элемент Из ИнтервалыОтпуска Цикл
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск;
			Движение.ПериодРегистрации = НачалоМесяца(Дата);

			Движение.ПериодДействияНачало = Элемент.ДатаНачала;
			Движение.ПериодДействияКонец = Элемент.ДатаОкончания;
			Движение.БазовыйПериодНачало = ДобавитьМесяц(НачалоМесяца(Выборка.ДатаНачала), -12);
			Движение.БазовыйПериодКонец = НачалоМесяца(Выборка.ДатаНачала) - 1;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.ГрафикРаботы = ГрафикРаботы;
		КонецЦикла;
		
		Если Сотрудники.Получить(Выборка.Сотрудник) = Неопределено Тогда
		//Формируем запись регистра удержания НДФЛ, если по сотруднику еще нет записи
			Движение = Движения.ВКМ_Удержания.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ_Отпуск;
			Движение.ПериодРегистрации = Дата;
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.СтавкаНДФЛ = СтавкаНДФЛ;
			Сотрудники.Вставить(Выборка.Сотрудник, Истина);
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура НачислениеЗП()
	
	//Получаем данные из графика
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.Ссылка,
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.Сотрудник
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.ЗаработнаяПлата КАК ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыЗаработнаяПлата.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия,0) КАК ФактДней,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия,0) КАК НормаДней
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|		И Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Сотрудники.Сотрудник
	|			ИЗ
	|				ВТ_Сотрудники)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВТ_Сотрудники.Сотрудник = ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник
	|		И ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = &ВидРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Результат = Запрос.Выполнить();
	Выборка = результат.Выбрать();
	
		
	НаборЗаписей = Движения.ВКМ_ОсновныеНачисления;
	
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Поиск = Новый Структура("НомерСтроки");
		Поиск.НомерСтроки = Запись.НомерСтроки;
		Если Выборка.НайтиСледующий(Поиск) Тогда
			Запись.ДнейОтработанно= Выборка.ФактДней;
			Запись.Начисленно = ?(Выборка.НормаДней = 0, 0, Запись.Оклад * (Выборка.ФактДней / Выборка.НормаДней)) + Запись.ОплатаПоПроценту;
		КонецЕсли;
		Выборка.Сбросить();
	КонецЦикла;  
	
	НаборЗаписей.Записать(,,Ложь);
	
КонецПроцедуры


Процедура НачислениеОтпуск()
	
	//Получаем данные из графика
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.Отпуск КАК ВКМ_НачислениеЗаработнойПлатыОтпуск
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыОтпуск.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	|	ВТ_Сотрудники.ДатаНачала КАК ДатаНачала,
	|	ВТ_Сотрудники.ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НачисленноБаза КАК НачисленноБазаОН,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ДнейОтработанноБаза КАК ДнейОтработанноБазаОН,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки1
	|ПОМЕСТИТЬ ВТ_БазаОН
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Изм, &Изм,, Регистратор = &Ссылка
	|		И ВидРасчета = &Вид
	|		И Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Сотрудники.Сотрудник
	|			ИЗ
	|				ВТ_Сотрудники)) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВТ_Сотрудники.Сотрудник = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник
	|		И ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВидРасчета = &Вид
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_БазаОН.Сотрудник КАК Сотрудник,
	|	ВТ_БазаОН.ДатаНачала КАК ДатаНачала,
	|	ВТ_БазаОН.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_БазаОН.ДнейОтработанноБазаОН КАК ДнейОтработанноБаза,
	|	ЕСТЬNull(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НачисленноБаза,0) КАК НачисленноБазаДН,
	|	ВТ_БазаОН.НачисленноБазаОН + ЕСТЬNull(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НачисленноБаза,0) КАК
	|		НачисленноБаза,
	|	ВТ_БазаОН.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_БазаОН КАК ВТ_БазаОН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Изм, &Изм,,
	|			ВидРасчета = &Вид
	|		И Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Сотрудники.Сотрудник
	|			ИЗ
	|				ВТ_Сотрудники)) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВТ_БазаОН.Сотрудник = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.Сотрудник
	|		И ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.ВидРасчета = &Вид
	|		И ВТ_БазаОН.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Вид", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Изм = Новый Массив;
	Изм.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Изм", Изм);
	Результат = Запрос.Выполнить();
	Выборка = результат.Выбрать();
	
		
	НаборЗаписей = Движения.ВКМ_ОсновныеНачисления;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Поиск = Новый Структура("НомерСтроки");
		Поиск.НомерСтроки = Запись.НомерСтроки;
		Если Выборка.НайтиСледующий(Поиск) Тогда
			Запись.ОтпускБаза = Выборка.НачисленноБаза;
			Запись.ДнейОтработаноБаза = Выборка.ДнейОтработанноБаза;
			КалендарныхДнейОтпуск = (Запись.ПериодДействияКонец - Запись.ПериодДействияНачало)/86400 + 1;
			Запись.Начисленно = ?(Выборка.ДнейОтработанноБаза = 0, 0, (Выборка.НачисленноБаза / Выборка.ДнейОтработанноБаза) * КалендарныхДнейОтпуск);
		КонецЕсли;
		Выборка.Сбросить();
	КонецЦикла;  
	
	НаборЗаписей.Записать(,,Ложь);
	
КонецПроцедуры

Процедура НачислениеУдержаний()
	
	//Получаем данные базы по удержаниям
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВидРасчета,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НачисленноБаза
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Изм, &Изм,, Регистратор = &Ссылка) КАК
	|		ВКМ_УдержанияБазаВКМ_ОсновныеНачисления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Изм = Новый Массив;
	Изм.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Изм", Изм);
	Результат = Запрос.Выполнить();
	Выборка = результат.Выбрать();
	
		
	НаборЗаписей = Движения.ВКМ_Удержания;
	Для Каждого Запись Из НаборЗаписей Цикл
		Поиск = Новый Структура("НомерСтроки");
		Поиск.НомерСтроки = Запись.НомерСтроки;
		Если Выборка.НайтиСледующий(Поиск) Тогда
			Запись.База = Выборка.НачисленноБаза;
			Запись.Начисленно = Запись.База * Запись.СтавкаНДФЛ /100;
		КонецЕсли;
		Выборка.Сбросить();
	КонецЦикла;  
	
	НаборЗаписей.Записать(,,Ложь);
	
КонецПроцедуры

Процедура ФормируемВзаиморасчетыССотрудниками()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	СУММА(ВКМ_ОсновныеНачисления.Начисленно) КАК ОсновныеНачисления
	|ПОМЕСТИТЬ ВТ_ОН
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.Сотрудник,
	|	СУММА(ВКМ_Удержания.Начисленно) КАК Удержания
	|ПОМЕСТИТЬ ВТ_Удержания
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_Удержания.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОН.Сотрудник КАК Сотрудник,
	|	ВТ_ОН.ОсновныеНачисления,
	|	ВТ_Удержания.Удержания
	|ИЗ
	|	ВТ_ОН КАК ВТ_ОН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	|		ПО ВТ_ОН.Сотрудник = ВТ_Удержания.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Результат = Запрос.Выполнить();
	НаборЗаписей = Результат.Выгрузить();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Для каждого Запись Из НаборЗаписей Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Запись.Сотрудник;
		Движение.Сумма = Запись.ОсновныеНачисления - Запись.Удержания;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ФормируемЗаписиОтпускаСотрудников()
	
	//Получаем данные
	
	Сотрудники = ВКМ_ОбщийСервер.ТабличнаяЧастьВСоответствие(Отпуск);
	
	НаборЗаписей = РегистрыСведений.ВКМ_Отпуска.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка);
	НаборЗаписей.Записать();

	
	Для Каждого Сотрудника Из Сотрудники Цикл
		ДнейВМесяцах = Сотрудника.Значение;
		Для Каждого Месяца Из ДнейВМесяцах Цикл
			Движение = НаборЗаписей.Добавить();
			Движение.Период = Дата;
			Движение.Документ = Ссылка;
			Движение.Год = Год(Дата);
			Движение.Сотрудник = Сотрудника.Ключ;
			Движение.Месяц = Месяца.Ключ;
			Движение.ДнейФакт = Месяца.Значение;
		КонецЦикла;
	КонецЦикла;
	 НаборЗаписей.Записать();
КонецПроцедуры


#КонецОбласти


#КонецЕсли
